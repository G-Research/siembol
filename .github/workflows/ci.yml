name: CI

on:
  push:
    branches:
      - master

jobs:
  build-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven
      - name: Build with Maven
        run: mvn -B package
      - name: Upload alerting-storm jar
        uses: actions/upload-artifact@v2
        with:
          name: alerting-storm
          path: alerting/alerting-storm/target/alerting-storm-*.jar
      - name: Upload enriching-storm jar
        uses: actions/upload-artifact@v2
        with:
          name: enriching-storm
          path: enriching/enriching-storm/target/enriching-storm-*.jar
      - name: Upload parsing-storm jar
        uses: actions/upload-artifact@v2
        with:
          name: parsing-storm
          path: parsing/parsing-storm/target/parsing-storm-*.jar

  build-docker-storm:
    runs-on: ubuntu-latest
    needs: build-java
    strategy:
      matrix:
        component: [alerting-storm, enriching-storm, parsing-storm]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download jar
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.component }}
          path: deployment/docker
      - name: Get component info
        id: info
        run: |
          [xml]$xml = Get-Content ./*/${{ matrix.component}}/pom.xml
          echo "::set-output name=version::$($xml.project.parent.version)"
          echo "::set-output name=class::$($xml.project.build.plugins.plugin.executions.execution.configuration.transformers.transformer.mainClass)"
        shell: pwsh
      - name: Build and push Docker image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: gresearchdev/siembol-${{ matrix.component }}
          path: deployment/docker
          dockerfile: deployment/docker/Dockerfile.storm
          build_args: JAR=${{ matrix.component }}-${{ steps.info.outputs.version }}.jar,CLASS=${{ steps.info.outputs.class }}
          always_pull: true
          add_git_labels: true
          tags: latest,${{ steps.info.outputs.version }}
