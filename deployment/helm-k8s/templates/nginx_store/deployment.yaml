{{- if (has "nginx_store" .Values.enabled_apps) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ include "siembol.nginx_store.fullname" $ }}
  name: {{ include "siembol.nginx_store.fullname" $ }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "siembol.nginx_store.fullname" $ }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "siembol.nginx_store.fullname" $ }}
      name: {{ include "siembol.nginx_store.fullname" $ }}
    spec:
      containers:
        - image: {{ .Values.nginx_store.image.repository }}:{{ .Values.nginx_store.image.tag }}
          imagePullPolicy: {{ .Values.nginx_store.image.pullPolicy }}
          name: {{ include "siembol.nginx_store.fullname" $ }}
          ports:
            - name: file-server
              containerPort: {{ .Values.nginx_store.containerPort }}
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "600m"
#          readinessProbe:
#            httpGet:
#              path: /health
#              port: {{ .Values.nginx_store.containerPort }}
#              scheme: HTTP
#            initialDelaySeconds: 30
#            periodSeconds: 30
#          livenessProbe:
#            httpGet:
#              path: /health
#              port: {{ .Values.nginx_store.containerPort }}
#              scheme: HTTP
#            initialDelaySeconds: 30
#            periodSeconds: 10
          env:
            - name: TEMP_KEY
              value: nginx-key1
          volumeMounts:
            - name: files
              mountPath: {{ .Values.nginx_store.files.location }}
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
      restartPolicy: Always
      securityContext:
        runAsUser: 101
        fsGroup: 2000
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-config
        - name: files
          persistentVolumeClaim:
            claimName: {{ .Values.nginx_store.pvc.name }}
  {{- end -}}
