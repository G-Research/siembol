apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ include "siembol.rest.fullname" $ }}
  name: {{ include "siembol.rest.fullname" $ }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: {{ include "siembol.rest.fullname" $ }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "siembol.rest.fullname" $}}
      name: {{ include "siembol.rest.fullname" $ }}
    spec:
      containers:
      - image: {{ .Values.rest.image.repository }}:{{ .Values.rest.image.tag }}
        workingDir: {{ .Values.rest.mountPath }}
        imagePullPolicy: {{ .Values.rest.image.PullPolicy }}
        name: {{ include "siembol.rest.fullname" $ }}
        ports:
          - containerPort: {{ .Values.rest.containerPort }}
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        securityContext:
          runAsUser: 101
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.rest.containerPort }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.rest.containerPort }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: {{ .Values.rest.configmap.name }}
        env:
        - name: XDG_CONFIG_HOME
          value: /config/jgit/.config
        {{ if .Values.tls.enabled -}}
        - name: JAVA_OPTS
          value: -Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts 
        {{ end }}
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "siembol.rest.fullname" $ }}-secrets
              key: git
        volumeMounts:
        {{ if .Values.tls.enabled -}}
        - name: cacerts
          mountPath: /etc/ssl/certs/java/cacerts
          subPath: cacerts
          readOnly: true        
        {{ end -}}
        - name: rules-dir
          mountPath: /tmp/siembol-config
        - name: config-dir
          mountPath: /config
      restartPolicy: Always
      volumes:
      {{ if .Values.tls.enabled -}}
      - name: cacerts
        secret:
          secretName: cacerts
      {{- end }}
      - name: rules-dir
        emptyDir: {}
      - name: config-dir
        emptyDir: {}
      terminationGracePeriodSeconds: 300
